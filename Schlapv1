-- v1 -- Load WindUI
local Version = "1.6.31"
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/download/" .. Version .. "/main.lua"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Backpack = LocalPlayer:WaitForChild("Backpack")

-- Variables
local WalkSpeedValue, JumpPowerValue = 16, 50
local SpeedEnabled = false
local AutoSlapEnabled = false
local SpinBotEnabled = false

-- Create Window
local Window = WindUI:CreateWindow({
	Title = "Schlap",
	Icon = "rbxassetid://4483345998",
	Author = "Merqury Hub",
	Folder = "SchlapConfig",
	Size = UDim2.fromOffset(580, 460),
	KeySystem = {
		Key = "SchlapKey2025",
		Note = "Join our Discord for the key!",
		URL = "https://discord.gg/example",
		SaveKey = true
	},
	Transparent = true,
	Theme = "Dark",
	SideBarWidth = 170
})

-- ========================
-- Main Tab
-- ========================
local MainTab = Window:CreateTab("Main")

-- Auto Slap Toggle
MainTab:CreateToggle({
	Name = "Auto Slap",
	Flag = "AutoSlapToggle",
	Value = false,
	Callback = function(value)
		AutoSlapEnabled = value
	end
})

-- Auto Slap Logic
RunService.Heartbeat:Connect(function()
	if AutoSlapEnabled then
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local distance = (Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
				if distance <= 10 then -- Adjust range
					-- Pick a random tool
					local tool = Backpack:GetChildren()[math.random(1, #Backpack:GetChildren())]
					if tool and tool:IsA("Tool") then
						tool.Parent = Character
						-- Trigger tool (simulate slap)
						tool:Activate()
						tool.Parent = Backpack
					end
				end
			end
		end
	end
end)

-- ========================
-- Misc Tab
-- ========================
local MiscTab = Window:CreateTab("Misc")

-- Rejoin Button
MiscTab:CreateButton({
	Name = "Rejoin",
	Callback = function()
		game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
	end
})

-- WalkSpeed Slider
MiscTab:CreateSlider({
	Name = "WalkSpeed",
	Min = 16,
	Max = 500,
	Value = WalkSpeedValue,
	Flag = "WalkSpeedSlider",
	Callback = function(value)
		WalkSpeedValue = value
		Humanoid.WalkSpeed = value
	end
})

-- JumpPower Slider
MiscTab:CreateSlider({
	Name = "JumpPower",
	Min = 50,
	Max = 500,
	Value = JumpPowerValue,
	Flag = "JumpPowerSlider",
	Callback = function(value)
		JumpPowerValue = value
		Humanoid.JumpPower = value
	end
})

-- Server Hop Button
MiscTab:CreateButton({
	Name = "Server Hop",
	Callback = function()
		local TeleportService = game:GetService("TeleportService")
		local HttpService = game:GetService("HttpService")
		local PlaceId = game.PlaceId
		local Servers = {}
		local Success, Response = pcall(function()
			return game:HttpGet("https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Asc&limit=100")
		end)
		if Success then
			local Data = HttpService:JSONDecode(Response)
			for _, server in pairs(Data.data) do
				if server.playing < server.maxPlayers and server.id ~= game.JobId then
					table.insert(Servers, server.id)
				end
			end
			if #Servers > 0 then
				TeleportService:TeleportToPlaceInstance(PlaceId, Servers[math.random(1, #Servers)], LocalPlayer)
			end
		end
	end
})

-- Spin Bot Toggle
MiscTab:CreateToggle({
	Name = "Spin Bot",
	Flag = "SpinBotToggle",
	Value = false,
	Callback = function(value)
		SpinBotEnabled = value
	end
})

-- Spin Bot Logic
RunService.Heartbeat:Connect(function()
	if SpinBotEnabled then
		if Character:FindFirstChild("HumanoidRootPart") then
			Character.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(15), 0)
		end
	end
end)
